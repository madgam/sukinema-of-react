{"ast":null,"code":"import { SetValue } from './index';\n\nconst _timeSort = (a, b) => {\n  const _a_time = '0000' + String(a.diff_time).slice(-4);\n\n  const _b_time = '0000' + String(b.diff_time).slice(-4);\n\n  return _a_time - _b_time;\n};\n\nconst _distanceSort = (a, b) => {\n  let _a_distance = '';\n\n  if (a.distance === 0.0) {\n    _a_distance = '0000';\n  } else {\n    _a_distance = ('0000' + a.distance * 10).slice(-4);\n  }\n\n  let _b_distance = '';\n\n  if (b.distance === 0.0) {\n    _b_distance = '0000';\n  } else {\n    _b_distance = ('0000' + b.distance * 10).slice(-4);\n  }\n\n  const _a_time = ('0000' + String(a.diff_time)).slice(-4);\n\n  const _b_time = ('0000' + String(b.diff_time)).slice(-4);\n\n  return _a_distance === _b_distance ? _a_time - _b_time : _a_distance - _b_distance;\n};\n\nconst _reviewSort = (a, b) => {\n  const _a_review = ('000' + a.review * 10).slice(-2);\n\n  const _b_review = ('000' + b.review * 10).slice(-2);\n\n  return _a_review === _b_review ? a.title - b.title : _b_review - _a_review;\n};\n\nconst Sort = (movies, sortID, latlong) => {\n  const valuedMovies = SetValue(movies, latlong);\n\n  switch (sortID) {\n    case 'time':\n      // 時間順でソート\n      return valuedMovies.sort(_timeSort);\n\n    case 'distance':\n      // 距離順でソート\n      return valuedMovies.sort(_distanceSort);\n\n    case 'review':\n      // レビューでソート\n      return valuedMovies.sort(_reviewSort);\n  }\n};\n\nexport default Sort;","map":{"version":3,"sources":["/usr/src/app/sukinema-app/src/helpers/Sort.js"],"names":["SetValue","_timeSort","a","b","_a_time","String","diff_time","slice","_b_time","_distanceSort","_a_distance","distance","_b_distance","_reviewSort","_a_review","review","_b_review","title","Sort","movies","sortID","latlong","valuedMovies","sort"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;;AAEA,MAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,QAAMC,OAAO,GAAG,SAASC,MAAM,CAACH,CAAC,CAACI,SAAH,CAAN,CAAoBC,KAApB,CAA0B,CAAC,CAA3B,CAAzB;;AACA,QAAMC,OAAO,GAAG,SAASH,MAAM,CAACF,CAAC,CAACG,SAAH,CAAN,CAAoBC,KAApB,CAA0B,CAAC,CAA3B,CAAzB;;AACA,SAAOH,OAAO,GAAGI,OAAjB;AACD,CAJD;;AAMA,MAAMC,aAAa,GAAG,CAACP,CAAD,EAAIC,CAAJ,KAAU;AAC9B,MAAIO,WAAW,GAAG,EAAlB;;AACA,MAAIR,CAAC,CAACS,QAAF,KAAe,GAAnB,EAAwB;AACtBD,IAAAA,WAAW,GAAG,MAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,GAAG,CAAC,SAASR,CAAC,CAACS,QAAF,GAAa,EAAvB,EAA2BJ,KAA3B,CAAiC,CAAC,CAAlC,CAAd;AACD;;AACD,MAAIK,WAAW,GAAG,EAAlB;;AACA,MAAIT,CAAC,CAACQ,QAAF,KAAe,GAAnB,EAAwB;AACtBC,IAAAA,WAAW,GAAG,MAAd;AACD,GAFD,MAEO;AACLA,IAAAA,WAAW,GAAG,CAAC,SAAST,CAAC,CAACQ,QAAF,GAAa,EAAvB,EAA2BJ,KAA3B,CAAiC,CAAC,CAAlC,CAAd;AACD;;AACD,QAAMH,OAAO,GAAG,CAAC,SAASC,MAAM,CAACH,CAAC,CAACI,SAAH,CAAhB,EAA+BC,KAA/B,CAAqC,CAAC,CAAtC,CAAhB;;AACA,QAAMC,OAAO,GAAG,CAAC,SAASH,MAAM,CAACF,CAAC,CAACG,SAAH,CAAhB,EAA+BC,KAA/B,CAAqC,CAAC,CAAtC,CAAhB;;AAEA,SAAOG,WAAW,KAAKE,WAAhB,GACHR,OAAO,GAAGI,OADP,GAEHE,WAAW,GAAGE,WAFlB;AAGD,CAnBD;;AAqBA,MAAMC,WAAW,GAAG,CAACX,CAAD,EAAIC,CAAJ,KAAU;AAC5B,QAAMW,SAAS,GAAG,CAAC,QAAQZ,CAAC,CAACa,MAAF,GAAW,EAApB,EAAwBR,KAAxB,CAA8B,CAAC,CAA/B,CAAlB;;AACA,QAAMS,SAAS,GAAG,CAAC,QAAQb,CAAC,CAACY,MAAF,GAAW,EAApB,EAAwBR,KAAxB,CAA8B,CAAC,CAA/B,CAAlB;;AACA,SAAOO,SAAS,KAAKE,SAAd,GAA0Bd,CAAC,CAACe,KAAF,GAAUd,CAAC,CAACc,KAAtC,GAA8CD,SAAS,GAAGF,SAAjE;AACD,CAJD;;AAMA,MAAMI,IAAI,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,KAA6B;AACxC,QAAMC,YAAY,GAAGtB,QAAQ,CAACmB,MAAD,EAASE,OAAT,CAA7B;;AACA,UAAQD,MAAR;AACE,SAAK,MAAL;AACE;AACA,aAAOE,YAAY,CAACC,IAAb,CAAkBtB,SAAlB,CAAP;;AACF,SAAK,UAAL;AACE;AACA,aAAOqB,YAAY,CAACC,IAAb,CAAkBd,aAAlB,CAAP;;AACF,SAAK,QAAL;AACE;AACA,aAAOa,YAAY,CAACC,IAAb,CAAkBV,WAAlB,CAAP;AATJ;AAWD,CAbD;;AAeA,eAAeK,IAAf","sourcesContent":["import { SetValue } from './index';\n\nconst _timeSort = (a, b) => {\n  const _a_time = '0000' + String(a.diff_time).slice(-4);\n  const _b_time = '0000' + String(b.diff_time).slice(-4);\n  return _a_time - _b_time;\n};\n\nconst _distanceSort = (a, b) => {\n  let _a_distance = '';\n  if (a.distance === 0.0) {\n    _a_distance = '0000';\n  } else {\n    _a_distance = ('0000' + a.distance * 10).slice(-4);\n  }\n  let _b_distance = '';\n  if (b.distance === 0.0) {\n    _b_distance = '0000';\n  } else {\n    _b_distance = ('0000' + b.distance * 10).slice(-4);\n  }\n  const _a_time = ('0000' + String(a.diff_time)).slice(-4);\n  const _b_time = ('0000' + String(b.diff_time)).slice(-4);\n\n  return _a_distance === _b_distance\n    ? _a_time - _b_time\n    : _a_distance - _b_distance;\n};\n\nconst _reviewSort = (a, b) => {\n  const _a_review = ('000' + a.review * 10).slice(-2);\n  const _b_review = ('000' + b.review * 10).slice(-2);\n  return _a_review === _b_review ? a.title - b.title : _b_review - _a_review;\n};\n\nconst Sort = (movies, sortID, latlong) => {\n  const valuedMovies = SetValue(movies, latlong);\n  switch (sortID) {\n    case 'time':\n      // 時間順でソート\n      return valuedMovies.sort(_timeSort);\n    case 'distance':\n      // 距離順でソート\n      return valuedMovies.sort(_distanceSort);\n    case 'review':\n      // レビューでソート\n      return valuedMovies.sort(_reviewSort);\n  }\n};\n\nexport default Sort;\n"]},"metadata":{},"sourceType":"module"}