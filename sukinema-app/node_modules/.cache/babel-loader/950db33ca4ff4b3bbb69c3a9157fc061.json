{"ast":null,"code":"const GetDistance = (lat1, lng1, lat2, lng2) => {\n  var location_array = [lat1, lng1, lat2, lng2];\n  lat1 *= Math.PI / 180;\n  lng1 *= Math.PI / 180;\n  lat2 *= Math.PI / 180;\n  lng2 *= Math.PI / 180;\n\n  if (location_array.indexOf(0) >= 0 || location_array.indexOf(undefined) >= 0 || location_array.indexOf(null) >= 0) {\n    return 0.0;\n  }\n\n  var distance = 6371 * Math.acos(Math.cos(lat1) * Math.cos(lat2) * Math.cos(lng2 - lng1) + Math.sin(lat1) * Math.sin(lat2));\n  return distance.toFixed(1);\n};\n\nexport default GetDistance;","map":{"version":3,"sources":["/usr/src/app/sukinema-app/src/helpers/Distance.js"],"names":["GetDistance","lat1","lng1","lat2","lng2","location_array","Math","PI","indexOf","undefined","distance","acos","cos","sin","toFixed"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,KAA4B;AAC9C,MAAIC,cAAc,GAAG,CAACJ,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,CAArB;AACAH,EAAAA,IAAI,IAAIK,IAAI,CAACC,EAAL,GAAU,GAAlB;AACAL,EAAAA,IAAI,IAAII,IAAI,CAACC,EAAL,GAAU,GAAlB;AACAJ,EAAAA,IAAI,IAAIG,IAAI,CAACC,EAAL,GAAU,GAAlB;AACAH,EAAAA,IAAI,IAAIE,IAAI,CAACC,EAAL,GAAU,GAAlB;;AAEA,MACEF,cAAc,CAACG,OAAf,CAAuB,CAAvB,KAA6B,CAA7B,IACAH,cAAc,CAACG,OAAf,CAAuBC,SAAvB,KAAqC,CADrC,IAEAJ,cAAc,CAACG,OAAf,CAAuB,IAAvB,KAAgC,CAHlC,EAIE;AACA,WAAO,GAAP;AACD;;AACD,MAAIE,QAAQ,GACV,OACAJ,IAAI,CAACK,IAAL,CACEL,IAAI,CAACM,GAAL,CAASX,IAAT,IAAiBK,IAAI,CAACM,GAAL,CAAST,IAAT,CAAjB,GAAkCG,IAAI,CAACM,GAAL,CAASR,IAAI,GAAGF,IAAhB,CAAlC,GACEI,IAAI,CAACO,GAAL,CAASZ,IAAT,IAAiBK,IAAI,CAACO,GAAL,CAASV,IAAT,CAFrB,CAFF;AAMA,SAAOO,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CAAP;AACD,CArBD;;AAuBA,eAAed,WAAf","sourcesContent":["const GetDistance = (lat1, lng1, lat2, lng2) => {\n  var location_array = [lat1, lng1, lat2, lng2];\n  lat1 *= Math.PI / 180;\n  lng1 *= Math.PI / 180;\n  lat2 *= Math.PI / 180;\n  lng2 *= Math.PI / 180;\n\n  if (\n    location_array.indexOf(0) >= 0 ||\n    location_array.indexOf(undefined) >= 0 ||\n    location_array.indexOf(null) >= 0\n  ) {\n    return 0.0;\n  }\n  var distance =\n    6371 *\n    Math.acos(\n      Math.cos(lat1) * Math.cos(lat2) * Math.cos(lng2 - lng1) +\n        Math.sin(lat1) * Math.sin(lat2)\n    );\n  return distance.toFixed(1);\n};\n\nexport default GetDistance;\n"]},"metadata":{},"sourceType":"module"}