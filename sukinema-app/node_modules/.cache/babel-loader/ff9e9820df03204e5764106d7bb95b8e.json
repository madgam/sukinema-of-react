{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Header, Lists, Modal } from '../components/index';\nimport { Sort } from '../helpers/index';\nimport Geocode from 'react-geocode';\nimport { PREF } from '../consructors/index';\nimport title from \"../assets/img/ttl.svg\";\nconst BASE_URL = 'https://sukinema.herokuapp.com/api/v1/movies';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [latlong, setLatLong] = useState({\n    latitude: 0.0,\n    longitude: 0.0\n  });\n  const [pref, setPref] = useState('');\n  const [isLocation, setIsLocation] = useState(false);\n  const [sortID, setSortID] = useState('time');\n  const [url, setUrl] = useState(BASE_URL);\n  const [modalShow, setModalShow] = useState(false);\n  const [movieID, setMovieID] = useState('');\n\n  if (!navigator.geolocation) {\n    // 現在位置を取得できない場合の処理\n    alert('あなたの端末では、現在位置を取得できません。');\n  }\n\n  const openModal = () => {\n    setModalShow(true);\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n  };\n\n  const initmovieID = movieID => {\n    setMovieID(movieID);\n  };\n\n  const getCurrentLocation = () => {\n    Geocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\n    Geocode.setLanguage('ja');\n    Geocode.setRegion('jp');\n    setIsLoading(true);\n    setIsLocation(false);\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLatLong({\n        latitude,\n        longitude\n      });\n      Geocode.fromLatLng(latitude, longitude).then(response => {\n        const fullAddress = response.results[0].formatted_address;\n        const address = fullAddress.split(' ')[1];\n        PREF.forEach(p => {\n          if (address.indexOf(p.name) != -1) {\n            setPref(p.id);\n            setUrl(url + `/pref/${p.id}`);\n            setIsLocation(true);\n          }\n        });\n      }, error => {\n        console.error(error);\n      });\n    }, error => {\n      // エラー番号に対応したメッセージ\n      const errorInfo = ['原因不明のエラーが発生しました…。', '位置情報の取得が許可されませんでした…。', '電波状況などで位置情報が取得できませんでした…。', '位置情報の取得に時間がかかり過ぎてタイムアウトしました…。'];\n      const errorNo = error.code;\n      const errorMessage = '[エラー番号: ' + errorNo + ']\\n' + errorInfo[errorNo];\n      alert(errorMessage);\n    });\n  };\n\n  useEffect(() => {\n    getCurrentLocation();\n  }, []);\n  useEffect(() => {\n    setIsLoading(true);\n    let retMovies = [];\n\n    const f = async () => {\n      await axios.get(url).then(results => {\n        retMovies.push(results.data);\n      }).catch(e => {\n        console.log(e);\n      });\n      const data = await retMovies[0];\n      setMovies(data);\n      setIsLoading(false);\n    };\n\n    f();\n  }, [url]);\n  const options = PREF.map(p => /*#__PURE__*/React.createElement(\"option\", {\n    key: p.id,\n    value: p.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, p.name));\n\n  const prefChange = e => {\n    const newPrefID = e.target.value;\n    setPref(newPrefID);\n\n    if (newPrefID) {\n      setUrl(BASE_URL + `/pref/${newPrefID}`);\n    } else {\n      setUrl(BASE_URL);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, (() => {\n    if (modalShow && movieID) {\n      return /*#__PURE__*/React.createElement(Modal, {\n        movies: movies,\n        latlong: latlong,\n        movieID: movieID,\n        closeModal: closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      });\n    }\n  })(), /*#__PURE__*/React.createElement(Header, {\n    movies: movies,\n    setMovies: setMovies,\n    setIsLoading: setIsLoading,\n    latlong: latlong,\n    setSortID: setSortID,\n    prefChange: prefChange,\n    prefOption: options,\n    currentPref: pref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), (() => {\n    if (isLoading || !isLocation) {\n      // return <div>...loading</div>;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: title,\n        alt: \"\\u30B9\\u30AD\\u30CD\\u30DE\\u3000\\u30B9\\u30AD\\u30DE\\u6642\\u9593\\u3067\\u6620\\u753B\\u3092\\u89B3\\u3088\\u3046\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, \"Loading...\"));\n    } else {\n      const valuedMovies = Sort(movies, sortID, latlong);\n\n      if (valuedMovies.length > 0) {\n        return /*#__PURE__*/React.createElement(Lists, {\n          movies: valuedMovies,\n          openModal: openModal,\n          initmovieID: initmovieID,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 20\n          }\n        }, \"\\u73FE\\u5728 \\u6620\\u753B\\u304C\\u516C\\u958B\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\");\n      }\n    }\n  })());\n};\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/src/components/App.jsx"],"names":["React","useState","useEffect","axios","Header","Lists","Modal","Sort","Geocode","PREF","BASE_URL","App","movies","setMovies","isLoading","setIsLoading","latlong","setLatLong","latitude","longitude","pref","setPref","isLocation","setIsLocation","sortID","setSortID","url","setUrl","modalShow","setModalShow","movieID","setMovieID","navigator","geolocation","alert","openModal","closeModal","initmovieID","getCurrentLocation","setApiKey","process","env","REACT_APP_GOOGLE_API_KEY","setLanguage","setRegion","getCurrentPosition","position","coords","fromLatLng","then","response","fullAddress","results","formatted_address","address","split","forEach","p","indexOf","name","id","error","console","errorInfo","errorNo","code","errorMessage","retMovies","f","get","push","data","catch","e","log","options","map","prefChange","newPrefID","target","value","title","valuedMovies","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Header, Lists, Modal } from '../components/index';\nimport { Sort } from '../helpers/index';\nimport Geocode from 'react-geocode';\nimport { PREF } from '../consructors/index';\nimport title from '../assets/img/ttl.svg';\n\nconst BASE_URL = 'https://sukinema.herokuapp.com/api/v1/movies';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [latlong, setLatLong] = useState({ latitude: 0.0, longitude: 0.0 });\n  const [pref, setPref] = useState('');\n  const [isLocation, setIsLocation] = useState(false);\n  const [sortID, setSortID] = useState('time');\n  const [url, setUrl] = useState(BASE_URL);\n  const [modalShow, setModalShow] = useState(false);\n  const [movieID, setMovieID] = useState('');\n\n  if (!navigator.geolocation) {\n    // 現在位置を取得できない場合の処理\n    alert('あなたの端末では、現在位置を取得できません。');\n  }\n\n  const openModal = () => {\n    setModalShow(true);\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n  };\n\n  const initmovieID = (movieID) => {\n    setMovieID(movieID);\n  };\n\n  const getCurrentLocation = () => {\n    Geocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\n    Geocode.setLanguage('ja');\n    Geocode.setRegion('jp');\n    setIsLoading(true);\n    setIsLocation(false);\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setLatLong({ latitude, longitude });\n        Geocode.fromLatLng(latitude, longitude).then(\n          (response) => {\n            const fullAddress = response.results[0].formatted_address;\n            const address = fullAddress.split(' ')[1];\n            PREF.forEach((p) => {\n              if (address.indexOf(p.name) != -1) {\n                setPref(p.id);\n                setUrl(url + `/pref/${p.id}`);\n                setIsLocation(true);\n              }\n            });\n          },\n          (error) => {\n            console.error(error);\n          }\n        );\n      },\n      (error) => {\n        // エラー番号に対応したメッセージ\n        const errorInfo = [\n          '原因不明のエラーが発生しました…。',\n          '位置情報の取得が許可されませんでした…。',\n          '電波状況などで位置情報が取得できませんでした…。',\n          '位置情報の取得に時間がかかり過ぎてタイムアウトしました…。',\n        ];\n        const errorNo = error.code;\n        const errorMessage =\n          '[エラー番号: ' + errorNo + ']\\n' + errorInfo[errorNo];\n        alert(errorMessage);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getCurrentLocation();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    let retMovies = [];\n    const f = async () => {\n      await axios\n        .get(url)\n        .then((results) => {\n          retMovies.push(results.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      const data = await retMovies[0];\n      setMovies(data);\n      setIsLoading(false);\n    };\n    f();\n  }, [url]);\n\n  const options = PREF.map((p) => (\n    <option key={p.id} value={p.id}>\n      {p.name}\n    </option>\n  ));\n\n  const prefChange = (e) => {\n    const newPrefID = e.target.value;\n    setPref(newPrefID);\n    if (newPrefID) {\n      setUrl(BASE_URL + `/pref/${newPrefID}`);\n    } else {\n      setUrl(BASE_URL);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {(() => {\n        if (modalShow && movieID) {\n          return (\n            <Modal\n              movies={movies}\n              latlong={latlong}\n              movieID={movieID}\n              closeModal={closeModal}\n            />\n          );\n        }\n      })()}\n      <Header\n        movies={movies}\n        setMovies={setMovies}\n        setIsLoading={setIsLoading}\n        latlong={latlong}\n        setSortID={setSortID}\n        prefChange={prefChange}\n        prefOption={options}\n        currentPref={pref}\n      />\n      {(() => {\n        if (isLoading || !isLocation) {\n          // return <div>...loading</div>;\n          return (\n            <div id='loader'>\n              <p className='title'>\n                <img src={title} alt='スキネマ　スキマ時間で映画を観よう' />\n              </p>\n              <span>Loading...</span>\n            </div>\n          );\n        } else {\n          const valuedMovies = Sort(movies, sortID, latlong);\n          if (valuedMovies.length > 0) {\n            return (\n              <Lists\n                movies={valuedMovies}\n                openModal={openModal}\n                initmovieID={initmovieID}\n              />\n            );\n          } else {\n            return <div>現在 映画が公開されていません</div>;\n          }\n        }\n      })()}\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}